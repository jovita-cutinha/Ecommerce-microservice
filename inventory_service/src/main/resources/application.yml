server:
  port: 8087

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:mysql://localhost:3306/inventory_service?createDatabaseIfNotExist=true
    username: admin01
    password: H1f78tnajhg&*
    hikari:
      auto-commit: true
      minimum-idle: 1
      maximum-pool-size: 10
      idle-timeout: 600000
      pool-name: SpringBootJPAHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/ecommerce-realm

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: inventory-service-group
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: com.ecommerce.inventory_service.dto
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: com.ecommerce.inventory_service.dto.ProductEvent
        spring.json.use.type.headers: false  # Critical for loose coupling
kafka:
  topics:
    product-events: product-events